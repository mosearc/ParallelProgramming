
gcc-9.1.0 -O2  -ftree-loop-distribution -floop-interchange -floop-unroll-and-jam -falign-loops -o r main.c

2933*10^6*2*8 * 6 /10^9 = 281.568 GB/s Bmem (per socket bandwidth)
24*2.3*32 = 1766.4 GFLOPS = 1.77 TFlOPS (Bmath) (per socket bandwidth)

(cahce cluster/float dimension)^0.5 dato che i blocchi son quadrati : (32K/4)^0.5 = 90 (per blocchi cache)

openMP 3.1 on gcc 4.8 -> questa è presente nel cluster :(

fare la trasposizione con metà manderebbe a puttane la cache per gli accessi doppi

----------

gcc-9.1.0 -O2 -march=native -faggressive-loop-optimizations -floop-interchange -ftree-vectorize -fprefetch-loop-arrays -falign-loops -floop-unroll-and-jam -ftree-loop-distribution -o runFlags main.c
prova anche con -ftree-loop-im -fipa-pta e vedi se migliora

gcc-9.1.0 -O2 -ftree-loop-distribution -floop-interchange -floop-unroll-and-jam -falign-loops -o run main.c -> top

-faggressive-loop-optimizations -> the same approx
-fprefetch-loop-arrays -> peggiora
-ftree-vectorize -> peggiora leggermente
-ftree-loop-im -fipa-pta -> peggiora leggermente


Possibili problemi:
Overhead di creazione dei thread: Creare troppi thread rispetto al lavoro disponibile può peggiorare le prestazioni.
Falsi sharing: Thread accedono a dati vicini nella memoria, causando conflitti di cache. -> soluzione: si può fare del blocking
Nn check sym puo esserci casino a causa delle sezioni critiche -> problemi xche c'è solo openMP 3.1
Nella trasposizione chill ogni thread fa lo stesso lavoro e non c'è bisogno di sezioni critiche xche scrivono in celle indipendenti




reference:
https://leimao.github.io/blog/Math-Bound-VS-Memory-Bound-Operations/ -> calcolo bound
https://gcc.gnu.org/onlinedocs/gcc/Other-Builtins.html -> prefetch
https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html -> flag di ottimizzazione
https://www.intel.com/content/www/us/en/docs/dpcpp-cpp-compiler/developer-guide-reference/2024-2/prefetch-noprefetch.html -> pragma prefetch
https://ark.intel.com/content/www/us/en/ark/products/193951/intel-xeon-gold-6252n-processor-35-75m-cache-2-30-ghz.html -> info processori cluster
https://en.wikipedia.org/wiki/DDR_SDRAM -> info ram del cluster
https://docs.google.com/spreadsheets/d/1-n4q-nFSHiIugUh_PSmsFS1VwP_ZUitkCSyDvz2As0E/edit?gid=1254941127#gid=1254941127 -> info processori cluster
https://www.cpu-world.com/CPUs/Xeon/Intel-Xeon%206252N.html -> info processori cluster
https://www.overleaf.com/latex/templates/ieee-conference-template/grfzhhncsfqn -> ieee template
https://www.delftstack.com/howto/c/gettimeofday-in-c/ -> get time of day
https://stackoverflow.com/questions/8107965/concept-of-block-size-in-a-cache -> blocking
https://www.cita.utoronto.ca/~merz/intel_c10b/main_cls/mergedProjects/optaps_cls/common/optaps_perf_optstrats.htm
https://www.ibm.com/docs/en/zos/3.1.0?topic=category-optimization-tuning#pragmas_optzn -> pragmas
https://www.openmp.org/spec-html/5.0/openmp.html -> openMP api
http://jakascorner.com/blog/2016/08/omp-cancel.html -> opm cancellation
https://www.openmp.org/spec-html/5.0/openmpsu42.html#x65-1390002.9.3 -> aligned e openMP
https://www.openmp.org/spec-html/5.0/openmp.html
https://www.geeksforgeeks.org/data-structure-alignment-how-data-is-arranged-and-accessed-in-computer-memory/ -> aligmnet of data

